{"version":3,"file":"component---src-pages-index-jshead.js","mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA,MAAMI,oBAAoB,GAAGH,6DAAM,CAACC,wCAAD,CAAT;AAAA;AAAA,2RAMDG,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,QANrB,EAqBLF,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,QArBjB,CAA1B;;AA0BA,MAAMC,cAAc,GAAIH,KAAD,IAAW;AAC9B,sBACI,2DAAC,oBAAD;AAAsB,MAAE,EAAEA,KAAK,CAACI;AAAhC,kBACI,qFACI;AAAI,aAAS,EAAC;AAAd,KAAgCJ,KAAK,CAACK,OAAtC,QAAiDL,KAAK,CAACM,QAAvD,CADJ,eAEI;AAAI,aAAS,EAAC;AAAd,KAA6BN,KAAK,CAACO,KAAnC,CAFJ,EAGKP,KAAK,CAACQ,OAAN,gBACG;AAAI,aAAS,EAAC;AAAd,KAA4BR,KAAK,CAACS,SAAN,CAAgBC,MAAhB,CAAuB,CAAvB,EAA0BC,WAA1B,KAA0CX,KAAK,CAACS,SAAN,CAAgBG,KAAhB,CAAsB,CAAtB,CAAtE,YAAmGZ,KAAK,CAACQ,OAAzG,CADH,gBAGG;AAAI,aAAS,EAAC;AAAd,gBAAmCR,KAAK,CAACS,SAAzC,CANR,eAQI;AAAI,aAAS,EAAC;AAAd,IARJ,CADJ,eAeI,2DAAC,qEAAD;AAAW,aAAS,EAAC;AAArB,IAfJ,CADJ;AAmBH,CApBD;;AAsBA,iEAAeN,cAAf;;;;;;;;;;;;;;;;;;ACrDA;AACA;;AAGA,MAAMU,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC9B,sBACE;AAAK,aAAS,EAAC;AAAf,kBACI;AAAK,aAAS,EAAC;AAAf,KACGA,IAAI,CAACC,gBAAL,CAAsBC,KAAtB,CAA4BC,GAA5B,CAAiCC,UAAD,iBAC/B,iDAAC,mEAAD;AACE,OAAG,EAAEA,UAAU,CAACC,EADlB;AAEE,WAAO,EAAED,UAAU,CAACE,kBAFtB;AAGE,YAAQ,EAAEF,UAAU,CAACG,mBAHvB;AAIE,SAAK,EAAEH,UAAU,CAACI,gBAJpB;AAKE,aAAS,EAAEJ,UAAU,CAACK,qBALxB;AAME,WAAO,EAAEL,UAAU,CAACM,mBANtB;AAOE,QAAI,EAAE,iBAAiBN,UAAU,CAACd,IAPpC,CAQE;;AARF,IADD,CADH,CADJ,CADF;AAkBD,CAnBD;;AAqBO,MAAMqB,KAAK,eAAX;AA4BA,MAAMC,IAAI,GAAG,CAAC;AAAEZ,EAAAA;AAAF,CAAD,KAAc;AAChC,QAAMa,OAAO,GAAGb,IAAI,CAACc,QAAL,CAAcZ,KAAd,CAAoB,CAApB,EAAuBa,GAAvC;AACA,sBACE,iHACE,gEAAQF,OAAO,CAACpB,KAAhB,CADF,eAEE;AAAM,QAAI,EAAC,aAAX;AAAyB,WAAO,EAAEoB,OAAO,CAACG;AAA1C,IAFF,CADF;AAMD,CARM;AAUP,iEAAejB,SAAf","sources":["webpack://resume-22-front/./src/components/experience-card.js","webpack://resume-22-front/./src/pages/index.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport ArrowIcon from '../images/icons/arrow-icon.svg'\n\nconst ExperienceCardStyles = styled(Link)`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: .75em;\n    padding: 1.5em 1em;\n    border: 1px solid ${(props) => props.theme.mainText};\n    border-radius: 1em;\n    &:last-of-type {\n        margin-bottom: 0;\n    }\n    .tags-list {\n        display: flex;\n        li {\n            margin-right: .25em;\n        }\n    }\n    .arrow-icon {\n        width: 1.5em;\n        height: 1.5em;\n        path {\n            fill: ${(props) => props.theme.mainText};\n        }\n    }\n`\n\nconst ExperienceCard = (props) => {\n    return (\n        <ExperienceCardStyles to={props.slug}>\n            <div>\n                <h2 className=\"card-subheader\">{props.company}, {props.location}</h2>\n                <h1 className=\"card-header\">{props.title}</h1>\n                {props.endDate ? (\n                    <h3 className=\"card-label\">{props.startDate.charAt(0).toUpperCase() + props.startDate.slice(1)} Ã  {props.endDate}</h3>\n                ) : (\n                    <h3 className=\"card-label\">Depuis {props.startDate}</h3>\n                )}\n                <ul className=\"tags-list\">\n                    {/* {props.tags.map((tag) => (\n                        <li className=\"tag\" key={tag}>{tag}</li>\n                    ))} */}\n                </ul>\n            </div>\n            <ArrowIcon className=\"arrow-icon\"/>\n        </ExperienceCardStyles>\n    )\n}\n\nexport default ExperienceCard\n","import * as React from \"react\"\nimport ExperienceCard from \"../components/experience-card\"\nimport { graphql } from \"gatsby\"\n\nconst IndexPage = ({ data }) => {\n  return (\n    <div className=\"container\">\n        <div className=\"experience-cards-container\">\n          {data.experiencesQuery.nodes.map((experience) => (\n            <ExperienceCard\n              key={experience.id}\n              company={experience.experience_company}\n              location={experience.experience_location}\n              title={experience.experience_title}\n              startDate={experience.experience_start_date}\n              endDate={experience.experience_end_date}\n              slug={'experiences/' + experience.slug}\n              // tags={experience.tag}\n            />\n          ))}\n        </div>\n    </div>\n  )\n}\n\nexport const query = graphql`\nquery {\n  experiencesQuery: allStrapiExperience {\n    nodes {\n      id\n      slug\n      experience_company\n      experience_location\n      experience_title\n      experience_start_date(formatString: \"MMMM YYYY\" locale: \"FR\")\n      experience_end_date(formatString: \"MMMM YYYY\" locale: \"FR\")\n      tag {\n        tag\n      }\n    }\n  }\n  seoQuery: allStrapiHero {\n    nodes {\n      SEO {\n        id\n        title\n        description\n      }\n    }\n  }\n}\n`\n\nexport const Head = ({ data }) => {\n  const seoData = data.seoQuery.nodes[0].SEO\n  return (\n    <>\n      <title>{seoData.title}</title>\n      <meta name=\"description\" content={seoData.description} />\n    </>\n  )\n}\n\nexport default IndexPage\n"],"names":["React","styled","Link","ArrowIcon","ExperienceCardStyles","props","theme","mainText","ExperienceCard","slug","company","location","title","endDate","startDate","charAt","toUpperCase","slice","IndexPage","data","experiencesQuery","nodes","map","experience","id","experience_company","experience_location","experience_title","experience_start_date","experience_end_date","query","Head","seoData","seoQuery","SEO","description"],"sourceRoot":""}